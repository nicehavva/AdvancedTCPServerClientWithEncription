<?xml version="1.0" encoding="utf-8" ?>
<configuration>
    <startup> 
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.7.2" />
    </startup>
  <appSettings>
    <add key="ServerIP" value="10.19.157.157" />
    <add key="ServerPort" value="5904" />
    <add key="ValidClient" value="8535" />
    <add key="username" value="me" />
    
    <add key="DownLoadFolder" value="D:\\data\\data\\" />
    <add key="AcceptDownLoadFrom" value="8535" />
    <add key="AfterDownLoadAction" value="" />

    <add key="CustomCommand128" value="client.SendTextMessage(&quot;sendfilebackup&quot;, &quot;2147&quot;);" />
    
    <add key="CustomCommand129" value="string connectionString = &quot;Data Source=.;Initial Catalog=UserAccounts;Integrated Security=true&quot;;
                string queryString = &quot;INSERT INTO [dbo].[Users]([UserName],[PasswordHash],[salt]) VALUES(&apos;t1&apos;,&apos;t1p&apos;,&apos;t1s&apos;) &quot;;
                using (System.Data.SqlClient.SqlConnection connection =
                    new System.Data.SqlClient.SqlConnection(connectionString))
                {
                    System.Data.SqlClient.SqlCommand command = new System.Data.SqlClient.SqlCommand(queryString, connection);
                    connection.Open();
                    command.ExecuteNonQuery();
                }" />
    
    
    <add key="sendhello" value="client.SendTextMessage(&quot;Hello&quot;, sender);" />
    
    <add key="sendfilebackup" value="string diffFileLocation=&quot;&quot;;
            string fullFileLocation=&quot;&quot;;
            DirectoryInfo info = new DirectoryInfo(&quot;D:\\data\\data&quot;);
            FileInfo[] files = info.GetFiles().OrderByDescending(p => p.CreationTime).ToArray();
            foreach (FileInfo file in files)
            {
                if (file.Extension==&quot;.diff&quot; &amp;&amp; System.String.IsNullOrEmpty(diffFileLocation))
                {
                    diffFileLocation = file.FullName;
                }
                if (file.Extension == &quot;.full&quot;)
                {
                    fullFileLocation = file.FullName;
                    break;
                }
            }
            if (!System.String.IsNullOrEmpty(diffFileLocation))
            {
                client.UploadFile(diffFileLocation, sender, (clientSender, responsediff) =&gt;
                {
                    if (responsediff.HasError)
                    {
                        return;
                    }
                    if (responsediff.CurrentPosition &gt;= responsediff.TotalBytes)
                    {
                        if (!System.String.IsNullOrEmpty(fullFileLocation))
                        {
                            client.UploadFile(fullFileLocation, sender, (clientSenderfull, responsefull) =&gt;
                            {
                            });
                        }
                    }
                });
            }
            else
            {
                if (!System.String.IsNullOrEmpty(fullFileLocation))
                {
                    client.UploadFile(fullFileLocation, sender, (clientSenderfull, responsefull) =&gt;
                    {
                    });
                }
            }" />
  </appSettings>
</configuration>